@model Item
@inject CodeZoneInventorySystem.Services.IITemRepository itemRepository

@{
    ViewBag.Title = "Add Item";
    var allStoreNames = new SelectList(itemRepository.GetAllStoresOfItem(Model.Id));
}

<form asp-controller="item" asp-action="edit" method="post" class="mt-3">
    <div asp-validation-summary="All" class="text-danger">
    </div>

    <input hidden asp-for="Id" />

    <div class="form-group row">
        <label asp-for="Name" class="col-sm-2 col-form-label"></label>
        <div class="col-sm-10">
            <input asp-for="Name" class="form-control" placeholder="Name">
            <span asp-validation-for="Name" class="text-danger"></span>
        </div>
    </div>
    <div class="form-group row">
        <label asp-for="Description" class="col-sm-2 col-form-label"></label>
        <div class="col-sm-10">
            <input asp-for="Description" class="form-control" placeholder="Description">
            <span asp-validation-for="Description" class="text-danger"></span>
        </div>
    </div>

    <br />
    <br />


    <div class="form-group row">
        <label  class="form-label">Stores containing this Item</label>
        <div class="col-sm-10">
            <select id="currentStore" class="custom-select mr-sm-2"
                    asp-items="allStoreNames">
            </select>
        </div>
    </div>

    <br/>
    <br />
    <br/>

    <div class="form-group row">
        <div class="col-sm-10">
            <button type="submit" class="btn btn-primary">Update</button>
            <a asp-action="index" asp-controller="item" class="btn btn-primary">Cancel</a>
        </div>
    </div>
</form>